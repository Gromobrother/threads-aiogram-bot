from aiogram import Router, types, F
from openai import AsyncOpenAI
import os

router = Router()

openai_client = AsyncOpenAI(api_key=os.getenv("OPENAI_API_KEY"))

@router.message(F.text.startswith("/gpt"))
async def gpt_command(message: types.Message):
    user_input = message.text.removeprefix("/gpt").strip()

    if not user_input:
        await message.reply("üîπ –ù–∞–ø–∏—à–∏ –≤–æ–ø—Ä–æ—Å –ø–æ—Å–ª–µ /gpt ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä: /gpt –∫—Ç–æ —Ç–∞–∫–∏–µ –¥–∏–∑–∞–π–Ω–µ—Ä—ã")
        return

    await message.answer("‚è≥ –î—É–º–∞—é...")

    try:
        response = await openai_client.chat.completions.create(
            model="gpt-4",
            messages=[
                {"role": "system", "content": "–¢—ã helpful Telegram-–±–æ—Ç, –ø–æ–º–æ–≥–∞–µ—à—å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –≥—Ä—É–ø–ø—ã, –¥–∞—ë—à—å —Ç–æ—á–Ω—ã–µ –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã."},
                {"role": "user", "content": user_input},
            ]
        )
        reply = response.choices[0].message.content.strip()
        await message.reply(reply)

    except Exception as e:
        await message.reply("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ GPT. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
        print("GPT error:", e)
